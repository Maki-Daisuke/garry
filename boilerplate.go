package wio

import (
	"crypto/md5"
	"fmt"
	"os"
)

// WriteMainGo is called by wio command to generate main.go.
// You don't need to use this unless you want to implement your own generator.
func WriteMainGo(name, version string) error {
	out, err := os.OpenFile("main.go", os.O_CREATE|os.O_EXCL|os.O_WRONLY, 0644)
	if err != nil {
		return err
	}
	defer out.Close()

	_, err = fmt.Fprintf(out, `// This file was generated by wio-init.
package main

import(
	"os"
	wio "github.com/Maki-Daisuke/go-whole-in-one"
)

func init() {
	wio.Name = %q
	wio.Version = %q
}

func main() {
	// Customize here as you like.
	wio.Register("help", wio.HelpCommand)
	wio.Register("-h", wio.HelpCommand)
	wio.Register("--help", wio.HelpCommand)
	wio.Register("version", wio.VersionCommand)
	wio.Register("-v", wio.VersionCommand)
	wio.Register("--version", wio.VersionCommand)
	wio.Exec(os.Args[1:])
}
`, name, version)
	return err
}

// WritePackGo is called by wio command to generate pack.go.
// You don't need to use this unless you want to implement your own generator.
func WritePackGo(data []byte) error {
	out, err := os.OpenFile("pack.go", os.O_CREATE|os.O_TRUNC|os.O_WRONLY, 0644)
	if err != nil {
		return err
	}
	defer out.Close()

	_, err = fmt.Fprintf(out, `// DO NOT EDIT! This file was generated by wio-init.
package main

import(
	"fmt"
	"os"
	"os/user"
	"path/filepath"
	"strings"
	wio "github.com/Maki-Daisuke/go-whole-in-one"
)

var(
	data = %q
	hash = "%X"
)

func init() {
	u, err := user.Current()
	if err != nil {
		panic(err)
	}
	unpackPath := filepath.Join(os.TempDir(), fmt.Sprintf("wiocache-%%s-%%s-%%s-%%s", wio.Name, wio.Version, u.Uid, hash))
	err = os.Mkdir(unpackPath, 0700)
	if os.IsExist(err) {
		// Do nothing because the data is already unpacked
	} else if err != nil {
		panic(err)
	} else if data != "" {
		wio.Unpack(unpackPath, strings.NewReader(data))
	}
	wio.SetEnv(unpackPath)
}
`, data, md5.Sum(data))
	return err
}

// WritePackingList is called by wio command to generate pack.go.
// You don't need to use this unless you want to implement your own generator.
func WritePackingList(name string) error {
	out, err := os.OpenFile("packing-list", os.O_CREATE|os.O_EXCL|os.O_WRONLY, 0644)
	if err != nil {
		return err
	}
	defer out.Close()

	_, err = fmt.Fprintf(out, `# This file was generated by wio-init.
%s-*
`, name)
	return err
}
